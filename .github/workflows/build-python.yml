name: Build Python Release

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: [3.5,3.6,3.7,3.8]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python v${{ matrix.python-version }}
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install wheel and setuptools
        run: |
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade wheel
      - name: Download Boost
        run: |
          python -c "import urllib.request;urllib.request.urlretrieve('https://sourceforge.net/projects/boost/files/boost/1.60.0/boost_1_60_0.zip/download', 'boost_1_60_0.zip')"
      - name: Windows Build
        if: runner.os == 'Windows'
        run: |
          choco install -y -f microsoft-build-tools
          choco install -y -f swig --version=4.0.1
          Expand-Archive boost_1_60_0.zip
          $startDir=$(pwd).tostring()
          cd $Env:GITHUB_WORKSPACE
          $command="python setup.py build_ext -I"+$startDir+"\boost_1_60_0\boost_1_60_0\ bdist_wheel"
          cmd.exe /c $command
      - name: macOS Build
        if: runner.os == 'macOS'
        run: |
          brew install swig
          brew install unzip
          unzip -qq boost_1_60_0.zip
          startDir=$(pwd)
          cd $GITHUB_WORKSPACE
          python setup.py build_ext -I$startDir/boost_1_60_0/ bdist_wheel
      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl
  build_manylinux:
    name: Build manylinux wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: RalfG/python-wheels-manylinux-build@v0.3.4-manylinux2014_x86_64
        with:
          python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
          system-packages: 'swig3 curl unzip'
          pre-build-command: 'sh download_boost.sh'
          pip-wheel-args: '-w ./dist --global-option build_ext --global-option -I./boost_1_60_0/'
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz


#   upload_pypi:
#     needs: [build_wheels, build_manylinux, build_sdist]
#     runs-on: ubuntu-latest
#     # upload to PyPI on every tag starting with 'v'
#     if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
#     # alternatively, to publish when a GitHub Release is created, use the following rule:
#     # if: github.event_name == 'release' && github.event.action == 'published'
#     steps:
#       - uses: actions/download-artifact@v2
#         with:
#           name: artifact
#           path: dist

#       - uses: pypa/gh-action-pypi-publish@master
#         with:
#           user: __token__
#           password: ${{ secrets.pypi_password }}
